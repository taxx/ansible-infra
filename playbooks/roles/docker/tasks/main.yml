---
- name: Ensure required packages are installed
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
    state: present
    update_cache: yes

- name: Ensure APT keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key (ASCII)
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker APT repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    filename: docker
    state: present

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes

- name: Ensure Docker service is running and enabled
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Add users to Docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  loop: "{{ ansible_users }}"
  when: ansible_users is defined and ansible_users | length > 0

# Docker Compose files deployment
- name: Deploy Main stack
  include_tasks: deploy-compose.yml
  vars:
    compose_src: docker-compose-main.yml.j2
    compose_dest: /opt/docker-compose.yml

- name: Deploy Tailscale stack
  include_tasks: deploy-compose.yml
  vars:
    compose_src: docker-compose-tailscale.yml.j2
    compose_dest: /opt/appdata/tailscale/docker-compose.yml